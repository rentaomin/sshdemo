<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
			           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
			           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
			           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
			           http://www.springframework.org/schema/mvc  http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd"
						default-autowire="byName" default-lazy-init="false">  
	
    
    <context:component-scan base-package="com.rtm.service.*" />
    
    <!--  读取配置的jdbc文件  -->
	 <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
	   <property name="locations"> <!-- PropertyPlaceholderConfigurer类中有个locations属性，接收的是一个数组，即我们可以在下面配好多个properties文件   -->
	        <array>  
	            <value>classpath:jdbc.properties</value>  
	        </array>  
	    </property>  
	</bean> 
	
	<!--与上面的配置是一样的，区别为上面便于理解  -->
	<!-- <context:property-placeholder location="classpath:jdbc.properties"/> -->
	
	<!--配置dbcp  -->
<!-- 	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"> 
	    <property name="driverClassName" value="${jdbc.driverClassName}" />  
	    <property name="url" value="${jdbc.url}" />  
	    <property name="username" value="${jdbc.username}" />  
	    <property name="password" value="${jdbc.password}" /> 
	    <property name="maxActive" value="${jdbc.maxActive}" />
	     
	 </bean>   -->
	 
	 <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		 	<property name="driverClass" value="${jdbc.driverClassName}" />  
		    <property name="jdbcUrl" value="${jdbc.url}" />  
		    <property name="user" value="${jdbc.username}" />  
		    <property name="password" value="${jdbc.password}" /> 
		    <property name="minPoolSize" value="3" />  
	        <property name="maxPoolSize" value="10" />  
	        <property name="maxIdleTime" value="1800" />  
	        <property name="acquireIncrement" value="3" />  
	        <property name="maxStatements" value="1000" />  
	        <property name="initialPoolSize" value="2" />  
	        <property name="idleConnectionTestPeriod" value="60" />  
	        <property name="acquireRetryAttempts" value="30" />  
	        <property name="breakAfterAcquireFailure" value="true" />  
	        <property name="testConnectionOnCheckout" value="false" />  
	 </bean>
 	
  	 <bean id="sessionFactory"  class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
         <property name="configLocations" >  
        	<list>
           		 <value>classpath:hibernate.cfg.xml</value>  
        	</list>
        </property>  
        
        <property name="hibernateProperties">  
        	<props>
	       	 	<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>  
	            <prop key="hibernate.show_sql">true</prop>  
	            <prop key="hibernate.hbm2ddl.auto">update</prop> 
        	</props>
        </property> 
    </bean>
    
    <!--配置  -->
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	

    <!-- 声明式事务管理器配置,单数据源事务 -->  
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">  
	    <property name="sessionFactory" ref="sessionFactory" />  
	</bean>
    
    <!--配置事务通知  -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager" >  
      <!--   配置事务传播性，隔离级别以及超时回滚等问题   -->
        <tx:attributes>  
      	     <!--配置事务传播 行为 -->
            <tx:method name="save*" propagation="REQUIRED" />  
            <tx:method name="delete*" propagation="REQUIRED" />  
            <tx:method name="update*" propagation="REQUIRED" />  
            <tx:method name="add*" propagation="REQUIRED" />  
            <!--发生异常进行回滚  -->
            <tx:method name="*" rollback-for="Exception"  />  
        </tx:attributes>  
    </tx:advice>  
    
    <aop:config>  
     <!--    配置事务切点  
     	   其中第一个*代表返回值，第二*代表service下子包，第三个*代表方法名，“（..）”代表方法参数。  -->
        <aop:pointcut id="txaop" expression="execution(* com.rtm.service.*.*(..))" />  
        <!--配置单个事务通知  -->
        <aop:advisor pointcut-ref="txaop" advice-ref="txAdvice" />  
    </aop:config>
    
 </beans>